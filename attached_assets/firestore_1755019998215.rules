
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin.
    // This makes the rules more readable and easier to maintain.
    function isAdmin(appId) {
      return request.auth != null && 
             get(/databases/$(database)/documents/artifacts/$(appId)/public/data/judges/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is a judge
    function isJudge(appId) {
      return request.auth != null && 
             get(/databases/$(database)/documents/artifacts/$(appId)/public/data/judges/$(request.auth.uid)).data.role == 'judge';
    }

    // Helper function to check if the user is a judge or admin
    function isJudgeOrAdmin(appId) {
      return request.auth != null && 
             exists(/databases/$(database)/documents/artifacts/$(appId)/public/data/judges/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/artifacts/$(appId)/public/data/judges/$(request.auth.uid)).data.role in ['judge', 'admin'];
    }

    // Public data: anyone authenticated can read
    match /artifacts/{appId}/public/data/{document=**} {
      allow read: if request.auth != null;
    }

    // Aggregated scores: only admin can write, anyone authenticated can read
    match /artifacts/{appId}/public/data/aggregatedScores/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(appId);
    }

    // Judges collection:
    match /artifacts/{appId}/public/data/judges/{judgeId} {
      // Anyone authenticated can read their own judge profile.
      // Admin can read all judge profiles.
      allow read: if request.auth != null && (request.auth.uid == judgeId || isAdmin(appId));

      // Only Admin can create/update/delete judge profiles.
      // Exception: Allow the hardcoded Admin email to write their OWN profile.
      allow write: if isAdmin(appId) || 
                      (request.auth.uid == judgeId && 
                       request.auth.token.email == "prathipweiyngya@gmail.com" && 
                       request.resource.data.role == 'admin');
    }

    // Contestants: only admin can write, anyone authenticated can read
    match /artifacts/{appId}/public/data/contestants/{contestantId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(appId);
    }

    // App state control: only admin can read/write
    match /artifacts/{appId}/public/data/appState/control {
      allow read: if request.auth != null;
      allow write: if isAdmin(appId);
    }

    // Judges' scores: only the judge can write/read their own scores, admin can read all
    match /artifacts/{appId}/users/{userId}/scores/{contestantId} {
      // Judge can read/write their own scores.
      // Admin can read all scores.
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin(appId));
      allow write: if request.auth != null && request.auth.uid == userId && isJudgeOrAdmin(appId);
    }
  }
}
